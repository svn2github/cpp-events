#ifndef CONNECTION_HPP
#define CONNECTION_HPP

#include "AbstractConnection.hpp"

@@for(int i=0; i<8; i+=1)
@listx("template<%> ", "class Param%", i)@class Connection@i@ : public AbstractConnection
{
protected:
	virtual ~Connection@i@() {}
public:
	typedef fastdelegate::FastDelegate@i@<@iter("Param%, ", i)@void> DelegateType;
	
	Connection@i@(AbstractEvent * ev, DelegateType const & deleg)
		: AbstractConnection(ev, deleg.GetMemento())
		, delegate_(deleg)
	{}

	void invoke(@list("Param% p%", i)@) const { delegate_(@list("p%",i)@); }
protected:
	DelegateType delegate_;

	Connection@i@(AbstractEvent * ev, AbstractDelegate const & memento)
		: AbstractConnection(ev, memento)
		, delegate_()
	{}
};

@@next
#endif //CONNECTION_HPP